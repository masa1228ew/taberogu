CREATE TABLE IF NOT EXISTS shop (
 id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 name VARCHAR(50) NOT NULL,
 image_name VARCHAR(255),
 descrption VARCHAR(255) NOT NULL,
 category VARCHAR(255) NOT NULL,
 address VARCHAR(255) NOT NULL,
 email VARCHAR(255) NOT NULL,
 created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
     updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS users(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(50) NOT NULL,
furigana VARCHAR(50) NOT NULL,
address VARCHAR(255) NOT NULL,
 email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL, 
  role_id INT NOT NULL, 
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
     updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS reservations(
id INT NOT NOT NULL AUTO_INCREMENT PRIMARY KEY,
shop_id INT NOT NULL,
user_id INT NOT NULL,
 created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
     updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
     FOREIGN KEY (shop_id) REFERENCES shop (id),
     FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS review(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
user_id INT NOT NULL,
shop_id INT NOT NULL,
review VARCHAR(255) NOT NULL,
created_at DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (user_id) REFERENCES users(id),
     FOREIGN KEY (shop_id) REFERENCES shop(id)
);

CREATE TABLE IF NOT EXISTS fav(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
shop_id INT NOT NULL,
user_id INT NOT NULL,
 created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
     updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
     UNIQUE (house_id, user_id),
     FOREIGN KEY (shop_id) REFERENCES shop (id),
     FOREIGN KEY (user_id) REFERENCES users (id) 
);

CREATE TABLE IF NOT EXISTS  category(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
shop_id INT NOT NULL,
user_id INT NOT NULL,
 category VARCHAR(255) NOT NULL,
  FOREIGN KEY (shop_id) REFERENCES shop (id),
     FOREIGN KEY (user_id) REFERENCES users (id) 
);