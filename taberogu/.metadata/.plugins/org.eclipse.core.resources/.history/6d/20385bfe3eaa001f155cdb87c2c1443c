package com.example.taberogu.controller;

import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.example.taberogu.Service.PassService;
import com.example.taberogu.entity.User;
import com.example.taberogu.form.PasswordEditForm;
import com.example.taberogu.security.UserDetailsImpl;

import jakarta.mail.MessagingException;
import jakarta.validation.Valid;

@Controller
//@RequestMapping("/pass")
public class PassController {
	  @GetMapping("/auth/pass")
	    public String showForgotPasswordForm() {
	    	
	        return "auth/pass";
	    }
	  @PostMapping("/auth/pass")
	    public String processForgotPassword(String email, RedirectAttributes redirectAttributes) {
//	    	token作成
	        String token = UUID.randomUUID().toString();
	        passService.createPasswordResetTokenForUser(email, token);

//	      リセットのためのtokenのついたURLを作成
	        String resetUrl = "http://localhost:8080/reset-password?token=" + token;
	        try {
//	        	メール送信：メール内容は、下のsendEmail()で実行
	            sendEmail(email, resetUrl);
	            redirectAttributes.addFlashAttribute("successMessage", "パスワード再発行リンクをメールで送信しました。");
	        } catch (MessagingException e) {
	            redirectAttributes.addFlashAttribute("errorMessage", "メール送信に失敗しました。");
	        }

	        return "redirect:/auth/UserNewPasswordIssue";
	    }

	//  パスワード再発行③：パスワードを再発行のためのメール発行・送信
	    private void sendEmail(String email, String resetUrl) throws MessagingException {
	        MimeMessage message = mailSender.createMimeMessage();
	        MimeMessageHelper helper = new MimeMessageHelper(message);

	        helper.setTo(email);
	        helper.setSubject("NAGOYAMESHI：パスワード再発行リンク");
	        helper.setText("以下のリンクをクリックしてパスワードを再発行してください: " + resetUrl);

	        mailSender.send(message);
	    }
	    
}
