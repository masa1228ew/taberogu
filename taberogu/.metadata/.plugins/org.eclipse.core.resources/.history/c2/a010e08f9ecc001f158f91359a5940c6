import React from 'react';
import { loadStripe } from '@stripe/stripe-js';
import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';

// Stripeのパブリッシュ可能なキーで初期化します
const stripePromise = loadStripe('pk_test_12345');

function UpdatePaymentMethod() {
  const stripe = useStripe();
  const elements = useElements();

  const handleSubmit = async (event) => {
    event.preventDefault();

    if (!stripe || !elements) {
      return;
    }

    const cardElement = elements.getElement(CardElement);

    const { error, paymentMethod } = await stripe.createPaymentMethod({
      type: 'card',
      card: cardElement,
    });

    if (error) {
      console.error(error);
      return;
    }

    // サーバーに支払い方法を送信
    const response = await fetch('/update-payment-method', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        paymentMethodId: paymentMethod.id,
      }),
    });

    if (response.ok) {
      console.log('Payment method updated successfully');
    } else {
      console.error('Failed to update payment method');
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <CardElement />
      <button type="submit" disabled={!stripe}>
        Update Payment Method
      </button>
    </form>
  );
}

function App() {
  return (
    <Elements stripe={stripePromise}>
      <UpdatePaymentMethod />
    </Elements>
  );
}

export default App;
